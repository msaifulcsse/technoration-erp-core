@using Entities.ViewModels
@model VmMarkingCriteria
@{
    ViewData["Title"] = "Marking Criterias";
    Layout = "_Admin_Layout";
}

<link href="~/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
<link href="~/css/sweetalert/sweetalert2.min.css" rel="stylesheet" />
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Marking Criterias</h1>
        <button type="button" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" id="AddNewMarkingCriteria">
            <i class="fas fa-plus"></i> Marking Criteria
        </button>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table id="markingCriteriaTable" class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Min.Values</th>
                            <th>Max.Values</th>
                            <th>Pass.Values</th>
                            <th>Details</th>
                            <th>CreatedBy</th>
                            <th>CreatedOn</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" data-backdrop="static" data-keyboard="false" id="modalAddOrUpdate">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title addorupdate">Add Marking Criteria</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" autocomplete="off">
                        <input type='hidden' name="MarkingCriteriaId" id="MarkingCriteriaId" value="0">
                        <div class="form-group">
                            <label>Criteria Name</label>
                            <input type="text" name="MarkingCriteriaName" id="MarkingCriteriaName" class="form-control form-padding" />
                            <span id="spnMarkingCriteriaName" class="text-danger" style="display:none;"></span>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <label>Minimum Value</label>
                                    <input type="number" step="0.01" name="MinimumValue" id="MinimumValue" class="form-control form-padding" />
                                    <span id="spnMinimumValue" class="text-danger" style="display:none;"></span>
                                </div>
                                <div class="col">
                                    <label>Maximum Value</label>
                                    <input type="number" step="0.01" name="MaximumValue" id="MaximumValue" class="form-control form-padding" />
                                    <span id="spnMaximumValue" class="text-danger" style="display:none;"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Passing Value</label>
                            <input type="number" step="0.01" name="PassingValue" id="PassingValue" class="form-control form-padding" />
                            <span id="spnPassingValue" class="text-danger" style="display:none;"></span>
                        </div>
                        <div class="form-group">
                            <label>Criteria Details</label>
                            <textarea name="MarkingCriteriaDetails" id="MarkingCriteriaDetails" class="form-control form-padding" rows="2"></textarea>
                            <span id="spnMarkingCriteriaDetails" class="text-danger" style="display:none;"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="button" id="frmAddUpdateBtn" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" data-backdrop="static" data-keyboard="false" id="confirmation">
        <div class="roleManage modal-dialog">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title">Do you really want to delete?</h4>
                </div>
                <div class="modal-body">
                    <p>After deleting this data, will not available in this table!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger confirmed" data-dismiss="modal">Yes, I Want</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">No, I don't</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="~/js/sweetalert/sweetalert2.all.min.js"></script>
    <script type="text/javascript">
        var id = 0;
        var markingCriteriaTable;

        $(document).ready(function () {
            markingCriteriaTable = $('#markingCriteriaTable').DataTable({
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "pageLength": 10,
                "ordering": false,
                "processing": true,
                "serverSide": true,
                "filter": true,
                "paging": true,
                "responsive": true,
                "ajax": {
                    "url": "/Configuration/AjaxMarkingCriterias",
                    "data": function (d) { }
                },
                "columns": [
                    { "data": "markingCriteriaId" },//Column Number:0
                    { "data": "markingCriteriaName" },//Column Number:1
                    {
                        "title": "Min.Values",//Column Number:2
                        "render": function (data, type, row, meta) {
                            return row.markingCriteriaMinimum;
                        }
                    },
                    {
                        "title": "Max.Values",//Column Number:3
                        "render": function (data, type, row, meta) {
                            return row.markingCriteriaMaximum;
                        }
                    },
                    {
                        "title": "Pass.Values",//Column Number:4
                        "render": function (data, type, row, meta) {
                            return row.markingCriteriaPassing;
                        }
                    },
                    { "data": "markingCriteriaDetails" },//Column Number:5
                    { "data": "createdBy" },//Column Number:6
                    { "data": "creationDate" },//Column Number:7
                    {
                        "title": "Action",//Column Number:8
                        "render": function (data, type, row, meta) {
                            return '<span class="update" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fas fa-edit bg-edit-action"></i></span> &nbsp;<span class="delete" data-toggle="tooltip" data-placement="top" title="Delete"><i class="fas fa-trash-alt bg-delete-action"></i></span>';
                        }
                    }
                ],
                "drawCallback": function (settings) {
                    $('[data-toggle="tooltip"]').tooltip();
                }
            });
        });

        $("#AddNewMarkingCriteria").on("click", function () {
            $('#MarkingCriteriaId').val(0);
            $("#MarkingCriteriaName").val("");
            $("#MinimumValue").val(0);
            $("#MaximumValue").val(0);
            $("#PassingValue").val(0);
            $("#MarkingCriteriaDetails").val("");
            $(".addorupdate").html('Add Marking Criteria');
            $("#frmAddUpdateBtn").html('Save');
            $("#frmAddUpdateBtn").prop("disabled", false);
            $('#modalAddOrUpdate').modal('show');
        });

        function VmMarkingCriteria() {
            var MarkingCriteriaId;
            var MarkingCriteriaName;
            var MinimumValue;
            var MaximumValue;
            var PassingValue;
            var MarkingCriteriaDetails;
        }

        $("#frmAddUpdateBtn").click(function () {
            var isValid = true;
            var markingCriteriaId = $("#MarkingCriteriaId").val();
            var markingCriteriaName = $.trim($("#MarkingCriteriaName").val());
            var minValue = $("#MinimumValue").val();
            var maxValue = $("#MaximumValue").val();
            var passValue = $("#PassingValue").val();
            var markingCriteriaDetails = $.trim($("#MarkingCriteriaDetails").val());

            $("#spnMarkingCriteriaName").hide();
            $("#spnMinimumValue").hide();
            $("#spnMaximumValue").hide();
            $("#spnPassingValue").hide();
            $("#spnMarkingCriteriaDetails").hide();

            if (markingCriteriaName == null || markingCriteriaName == "") {
                $("#spnMarkingCriteriaName").text("Provide the marking criteria name.");
                $("#spnMarkingCriteriaName").show();
                isValid = false;
            }
            if (minValue == null || minValue == "") {
                $("#spnMinimumValue").text("Provide the criterias minimum value.");
                $("#spnMinimumValue").show();
                isValid = false;
            }
            if (maxValue == null || maxValue == "") {
                $("#spnMaximumValue").text("Provide the criterias maximum value.");
                $("#spnMaximumValue").show();
                isValid = false;
            }
            if (passValue == null || passValue == "") {
                $("#spnPassingValue").text("Provide the criterias passing value.");
                $("#spnPassingValue").show();
                isValid = false;
            }
            if (markingCriteriaDetails != null && markingCriteriaDetails != "" && markingCriteriaDetails.length > 500) {
                $("#spnMarkingCriteriaDetails").text("Marking criteria details must be within 500 characters.");
                $("#spnMarkingCriteriaDetails").show();
                isValid = false;
            }

            if (markingCriteriaId >= 0 && isValid == true) {
                $("#frmAddUpdateBtn").prop("disabled", true);
                var data = new VmMarkingCriteria();
                data.MarkingCriteriaId = markingCriteriaId;
                data.MarkingCriteriaName = markingCriteriaName;
                data.MinimumValue = minValue;
                data.MaximumValue = maxValue;
                data.PassingValue = passValue;
                data.MarkingCriteriaDetails = markingCriteriaDetails;

                $.post("/Configuration/MarkingCriteriaAddEdit", { model: data }, function (data) {
                    $("#frmAddUpdateBtn").prop("disabled", false);
                    $('#modalAddOrUpdate').modal('hide');
                    if (data.sucMessage != null && data.sucMessage != "") {
                        Swal.fire({
                            position: 'top-end',width: 400,
                            type: 'success',
                            text: data.sucMessage,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                    else if (data.errMessage != null && data.errMessage != "") {
                        Swal.fire({
                            position: 'top-end',width: 400,
                            type: 'error',
                            text: data.errMessage,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                    markingCriteriaTable.ajax.reload();
                    isValid = true;
                });
            }
            return isValid;
        });

        $(function () {
            $('#markingCriteriaTable tbody').on('click', 'span.update', function () {
                var v = $(this).parent().parent();
                var rowData = markingCriteriaTable.row(v).data();
                $('#MarkingCriteriaId').val(rowData.markingCriteriaId);
                $("#MarkingCriteriaName").val(rowData.markingCriteriaName);
                $("#MinimumValue").val(rowData.markingCriteriaMinimum);
                $("#MaximumValue").val(rowData.markingCriteriaMaximum);
                $("#PassingValue").val(rowData.markingCriteriaPassing);
                $("#MarkingCriteriaDetails").val(rowData.markingCriteriaDetails);
                $(".addorupdate").html('Edit Marking Criteria');
                $("#frmAddUpdateBtn").html('Update');
                $('#modalAddOrUpdate').modal("show");
            });
        });

        $(function () {
            $('#markingCriteriaTable tbody').on('click', 'span.delete', function () {
                $('#confirmation').modal();
                var v = $(this).parent().parent();
                var rowData = markingCriteriaTable.row(v).data();
                id = parseInt(rowData.markingCriteriaId);
            });
        });

        $(function () {
            $('#confirmation').on('click', '.confirmed', function () {
                $.get("/Configuration/DeleteMarkingCriteria/" + id, function (data) {
                    if (data.sucMessage != null && data.sucMessage != "") {
                        Swal.fire({
                            position: 'top-end',width: 400,
                            type: 'success',
                            text: data.sucMessage,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    } else if (data.errMessage != null && data.errMessage != "") {
                        Swal.fire({
                            position: 'top-end',width: 400,
                            type: 'error',
                            text: data.errMessage,
                            showConfirmButton: false,
                            timer: 5000
                        });
                    }
                    id = 0;
                    markingCriteriaTable.ajax.reload();
                });
            });
        });
    </script>
}




